pipeline {
    agent any
    stages {
      /*  stage("Testing Maven") {
            steps {
                sh "mvn -version"
            }
        }
        stage("Testing JDK") {
            steps {
                sh "java -version"
            }
        }*/
        stage("Checkout Git") {
            steps {
                echo "Pulling"
            }
        }
        stage('MVN COMPILE') {
            steps {
                dir('DevOps_Project') {
                    sh 'mvn compile'
                }
            }
        }/*
    stage('Unit Tests / Mockito') {
        steps {
            dir('DevOps_Project') {
                sh 'mvn test'
            }
        }
    }
stage('Test, Jacoco Report & Static Analysis') {
                    steps {
                        dir('DevOps_Project') {
                        sh 'mvn test jacoco:report'
                        junit 'target/surefire-reports/**/*.xml'
                    }
}
        }
            

        stage('MVN SONARQUBE') {
            steps {
                dir('DevOps_Project'){
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar'
            }
}
        }

       stage('Deploy') {
            steps {
         dir('DevOps_Project') {
                sh 'mvn deploy -Dmaven.test.skip=true'
            }
        }
        }
*/
         stage('Build Docker Image') {
                    steps {
                     dir('DevOps_Project') {
                        sh 'docker build -t devops_project .'
                     }
            }
        }
        stage('Build & Push Docker Image') {
            steps {
                script {
                    def dockerUsername = 'farahkamoun'
                    def dockerPassword = '191JFT2107'
                    sh "docker login -u $dockerUsername -p $dockerPassword"
                    dir('DevOps_Project') {
                        sh 'docker tag devops_project farahkamoun/devops_project:latest'
                        sh 'docker push farahkamoun/devops_project:latest'
                    }
                }
            }
        }


   

        }
/*
   post {
        always {
            script {
                def scannerHome = tool name: 'sonarqube', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                withSonarQubeEnv('sonarqube') {
                    sh "${scannerHome}/bin/sonar-scanner \
                        -Dsonar.login=admin \
                        -Dsonar.password=sonar \
                        -Dsonar.jacoco.reportPaths=DevOps_Project/target/site/jacoco/jacoco.xml \
                        -Dsonar.projectKey=DevOps_Project \
                        -Dsonar.exclusions=vendor/**,resources/**,**/*.java \
                        -Dsonar.host.url=http://192.168.176.160:9000/"
                }
            }
        }
    }
  */
}
