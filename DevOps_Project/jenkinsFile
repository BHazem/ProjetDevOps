pipeline {
    agent any
    stages {
        stage("Testing Maven") {
            steps {
                sh "mvn -version"
            }
        }
        stage("Testing JDK") {
            steps {
                sh "java -version"
            }
        }
        stage("Mvn clean") {
            steps {
                dir('DevOps_Project') {
                    sh 'mvn clean'
                }
            }
        }
        stage('MVN COMPILE') {
            steps {
                dir('DevOps_Project') {
                    sh 'mvn compile'
                }
            }
        }
stage('Run Tests') {
    steps {
        dir('DevOps_Project') {
            sh 'mvn test' 
        }
    }
}
  stage('Generate JaCoCo Coverage Report') {
        steps {
            dir('DevOps_Project') {
                sh 'mvn jacoco:report'
            }
        }
    }
    stage('MVN SONARQUBE') {
        steps {
            dir('DevOps_Project') {
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar'
            }
        }
    }
    stage('MVN Install') {
            steps {
                dir('DevOps_Project') {
                    sh 'mvn install'
                }
            }
        }
        stage('Deploy') {
            steps {
         dir('DevOps_Project') {
                sh 'mvn deploy -DskipTests -DaltDeploymentRepository=deploymentRepo::default::http://localhost:8081/repository/maven-releases/'
            }
        }
        }
       stage('Build Docker Image') {
            steps {
             echo 'Building Docker image for the application...'
             script {
            // Utilisation de la commande docker build pour construire l'image
             dir('DevOps_Project') {
                sh 'sudo docker build -t devops_project .'
             }
        }
    }
}

    }
   post {
        always {
            script {
                def scannerHome = tool name: 'sonarqube', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                withSonarQubeEnv('sonarqube') {
                    sh "${scannerHome}/bin/sonar-scanner \
                        -Dsonar.login=admin \
                        -Dsonar.password=sonar \
                        -Dsonar.jacoco.reportPaths=DevOps_Project/target/site/jacoco/jacoco.xml \
                        -D sonar.projectKey=DevOps_Project \
                        -Dsonar.exclusions=vendor/**,resources/**,**/*.java \
                        -Dsonar.host.url=http://192.168.1.27:9000/"
                }
            }
        }
    }
  
}
