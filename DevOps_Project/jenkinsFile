pipeline{
    agent any
    stages {
        stage("Testing Maven"){
            steps {
                sh "mvn -version"
            }
        }
        stage("Testing JDK"){
            steps {
                sh "java -version"
            }
        }
         stage("Checkout Git") {
                    steps {
                        echo "Pulling"
                    }
                }
         stage("Mvn clean") {
             steps {
                 dir('DevOps_Project') {
                        sh 'mvn clean'
    }
  }
 }

        stage('MVN COMPILE') {
            steps{
                 dir('DevOps_Project') {
                sh 'mvn compile'
            }
        }
}


    stage('Unit Tests / Mockito') {
        steps {
            dir('DevOps_Project') {
                sh 'mvn test'
            }
        }
    }
    stage('JaCoCo Coverage Report') {
        steps {
            dir('DevOps_Project') {
                sh 'mvn jacoco:report'
            }
        }
    }

     stage('MVN SONARQUBE') {
            steps{
                 dir('DevOps_Project') {
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar'
            }}
        }
  stage('Deploy') {
             steps {
          dir('DevOps_Project') {
                 sh 'mvn deploy -DskipTests -DaltDeploymentRepository=deploymentRepo::default::http://localhost:8081/repository/maven-releases/'
             }
         }
         }
      /*  stage('Build Docker Image') {
                      steps {
                       dir('DevOps_Project') {
                          sh 'docker build -t devops_project .'
                       }
              }
          }*/

          stage('Build Docker Image') {
              steps {
                   script {
                      // Utilisation de la commande docker build pour construire l'image
                      dir('DevOps_Project') {
                          sh 'docker build -t soulaima2/devops_project .'
                      }
                  }
              }
          }

          stage('Push Docker Image') {
              steps {
                  script {
                      def dockerUsername = 'soulaima2'
                      def dockerPassword = 'Soulaima1122'
                      sh "docker login -u $dockerUsername -p $dockerPassword"
                      dir('DevOps_Project') {
                          sh 'docker tag soulaima2/devops_project soulaima2/devops_project:latest'
                          sh 'docker push soulaima2/devops_project:latest'
                      }
                  }
              }
          }

}
  post {
        always {
            script {
                def scannerHome = tool name: 'sonarqube', type: 'hudson.plugins.sonar.SonarRunnerInstallation'

                withSonarQubeEnv('sonarqube') {

                    sh "${scannerHome}/bin/sonar-scanner \
                        -Dsonar.login=admin \
                        -Dsonar.password=sonar \
                        -Dsonar.jacoco.reportPaths=DevOps_Project/target/site/jacoco/jacoco.xml \
                        -Dsonar.projectKey=DevOps_Project \
                        -Dsonar.exclusions=vendor/**,resources/**,**/*.java \
                        -Dsonar.host.url=http://192.168.1.49:9000/"
                }
            }
        }
    }


}
