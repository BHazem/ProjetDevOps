pipeline{
    agent any
    stages {
        stage("Testing version  Maven"){
            steps {
                sh "mvn -version"
            }
        }
        stage("Testing version JDK"){
            steps {
                sh "java -version"
            }
        }
        stage("Chekout Git"){
            steps {
                echo "Pulling"
            }
        }
        stage('MVN COMPILE') {
            steps{
                 dir('DevOps_Project') {
                sh 'mvn compile'
            }
        }
}

  stage('MVN test') {
            steps{
                 dir('DevOps_Project') {
                sh 'mvn test'
            }
        }
}
  stage('Generate JaCoCo Coverage Report') {
        steps {
            dir('DevOps_Project') {
                sh 'mvn jacoco:report'
            }
        }
    }


     stage('MVN SONARQUBE') {
            steps{
                 dir('DevOps_Project') {
                sh 'mvn sonar:sonar -Dsonar.login=admin -Dsonar.password=sonar'
            }}
        }
         stage('MVN Install') {
                    steps {
                        dir('DevOps_Project') {
                            sh 'mvn install'
                        }
                    }
}
          stage('Nexus') {
                    steps{
                         dir('DevOps_Project') {
                        sh 'mvn deploy -DskipTests  -DaltDeploymentRepository=deploymentRepo::default::http://localhost:8081/repository/maven-releases/'
                    }
                }
        }

        /*
                stage('Build Docker Image') {
                    steps {
                        script {
                            dir('DevOps_Project') {
                                // Construire l'image Docker avec un tag. Remplacez 'myapp' par le nom de votre application
                                sh 'docker build -t DevOps_Project:latest .'
                            }
                        }
                    }
                }

                // Ajouter une Ã©tape pour pousser l'image dans un registre Docker
                stage('Push Docker Image') {
                    steps {
                        script {
                            // Pousser l'image vers le registre Docker. Remplacez 'myregistry' par l'URL de votre registre
                              def dockerUsername = 'maleksoufi'
                              def dockerPassword = 'ETOILESPORTIVEDUSAHEL1925'


                            // et 'myapp' par le nom de votre application
                            sh 'docker push myregistry/DevOps_Project:latest'
                        }
                    }
                }
            */
    }
}


